C -library - <limits.h>

The limits.h header determines the various properties of the various variable types.
- check macros defined in this header: https://www.tutorialspoint.com/c_standard_library/limits_h.htm
- they are implementation specific and defined by "#define" directive.

If Statements in C
- TRUE statement -> operator returns 1 e.g check 2 == 2, evaluates to 1.
- FALSE statement -> operator returns 0 e.g chec 0 == 2, evaluates to 0.
- SIX relational operators include:
-  '>'  "greater than" (5 > 4 is TRUE)
-  '<'  "less than" (4 < 5 is TRUE)
-  '>=' "greater than or equal to" (4 >= 4 is TRUE)
-  '<=' "less than or equal to" (3 <= 4 is TRUE)
-  '==' "is equal to" (5 == 5 is TRUE)
-  '!=' "not equal to" (5!= 4 is TRUE)

Boolean operators
OR,NOT and AND

- Allows you to create more complex conditional statements
- e.g check if a var is both greater than 5 and less than 10
- bolean operator lets you check var > 5 and var < 10 at the same time
- OR, NOT  and AND: 
  - returns 0 (if it evaluates to FALSE)
  - returns 1 (if it evaluates to TRUE)

	NOT:
	- written as "!"
	- has 1 input
	- TRUE input returns FALSE
	- FALSE inpt returns TRUE
	- NOT(1) evaluates to 0
	- NOT(0) evaluates to 1
	- NOT(any no. but 0) evaluates to 0
	- Evaluated BEFORE AND and OR operators

	AND:
	- written as "&&"
	- 2 inputs
	- if BOTH inputs are TRUE, TRUE is returned 
	- (i.e. if 'this' AND 'that' are true)
	- (1)AND(0) evaluates to 0
	- (1)AND(1) evaluates to 1
	- (any no. but 0)AND(0) evaluates to 0
	- Evaluated BEFORE OR operator

	OR:
	- written as "||"
	- if one or both values check TRUE, TRUE is returned
	- (1)OR(0) evaluates to 1
	- (0)OR(0) evaluates to 0
	- (1)0R(1) evaluates to 1
	- Evaluated AFTER AND operator

- NB: Take parenthesis into account. The are useful and important


sources:
1.  https://www.tutorialspoint.com/c_standard_library/limits_h.htm   
2.  https://www.cprogramming.com/tutorial/c/lesson2.html
